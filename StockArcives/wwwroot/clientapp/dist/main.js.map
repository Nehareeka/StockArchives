{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/Shared/dataService.ts","webpack:///./ClientApp/app/Shared/pager.service.ts","webpack:///./ClientApp/app/Shared/stock.ts","webpack:///./ClientApp/app/app.component.css","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/directives/sort.directive.ts","webpack:///./ClientApp/app/stock/stockDetails.component.html","webpack:///./ClientApp/app/stock/stockDetails.component.ts","webpack:///./ClientApp/app/stock/stockList.component.css","webpack:///./ClientApp/app/stock/stockList.component.html","webpack:///./ClientApp/app/stock/stockList.component.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","﻿import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Stock } from \"./stock\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public stocks: Stock[] = [];\r\n    private headers = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    loadStock(): Observable<Stock[]> {\r\n        return this.http.get(\"/api/stock\")\r\n            .pipe(map((data: any[]) => {\r\n                this.stocks = data;\r\n                return this.stocks;\r\n            }));\r\n    }\r\n\r\n    getStockDetails(symbol: string): Observable<Stock[]> {\r\n        return this.http.get(\"/api/stock/\" + symbol)\r\n            .pipe(map((data: Stock[]) => {\r\n                this.stocks = data.map(res=> new Stock(res.close, res.date, res.high, res.low, res.open, res.symbol, res.volume));\r\n                return this.stocks;\r\n            }));\r\n    }\r\n\r\n    //addNewMovie(movie: string): Observable<Movie> {\r\n    //    return this.http.post(\"/api/movie\", movie, this.headers)\r\n    //        .pipe(map((data: any) => {\r\n    //            return data;\r\n    //        }));\r\n    //}\r\n\r\n    //loadPerson(person: string): Observable<Person[]> {\r\n    //    return this.http.get(\"/api/\" + person)\r\n    //        .pipe(map((data: any) => {\r\n    //            return data;\r\n    //        }));\r\n    //}\r\n\r\n    //addNewPerson(postData: string): Observable<Person> {\r\n    //    return this.http.post(\"api/movie/AddPerson\", postData, this.headers)\r\n    //        .pipe(map((data: any) => {\r\n    //            return data;\r\n    //        }));\r\n    //}\r\n\r\n    //updateExistingPerson(postData: string): Observable<Person> {\r\n    //    return this.http.post(\"api/movie/UpdatePerson\", postData, this.headers)\r\n    //        .pipe(map((data: any) => {\r\n    //            return data;\r\n    //        }));\r\n    //}\r\n}","﻿import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PagerService {\r\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\r\n        // calculate total pages\r\n        let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        // ensure current page isn't out of range\r\n        if (currentPage < 1) {\r\n            currentPage = 1;\r\n        } else if (currentPage > totalPages) {\r\n            currentPage = totalPages;\r\n        }\r\n        let startPage: number, endPage: number;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        let startIndex = (currentPage - 1) * pageSize;\r\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n}\r\n","﻿export class Stock {\r\n\r\n    constructor(\r\n        public close: number,\r\n        public date: Date,\r\n        public high: number,\r\n        public low: number,\r\n        public open: number,\r\n        public symbol: string,\r\n        public volume: number\r\n    ) {\r\n        this.date = new Date(date);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'stock-archive',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { APP_BASE_HREF } from '@angular/common'; \n\nimport { AppComponent } from './app.component';\nimport { StockListComponent } from './stock/stockList.component';\nimport { StockDetailsComponent } from './stock/stockDetails.component';\n\nimport { SortDirective } from './directives/sort.directive';\n\nimport { DataService } from './Shared/dataService';\nimport { PagerService } from './Shared/pager.service';\n\nlet route: Routes = [\n    { path: \"index\", component: StockListComponent },\n    { path: \"detail/:symbol\", component: StockDetailsComponent },\n    { path: '', redirectTo: 'index', pathMatch: 'full' },\n    { path: '**', redirectTo: 'index', pathMatch: 'full' }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        StockListComponent,\n        StockDetailsComponent,\n        SortDirective\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        RouterModule.forRoot(route)\n    ],\n    providers: [\n        { provide: APP_BASE_HREF, useValue: '/' },\n        DataService,\n        PagerService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿import { Directive, EventEmitter, Input, Output, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appSort]'\r\n})\r\nexport class SortDirective {\r\n\r\n    @Input() public appSort: any;\r\n    @Input() public column: any;\r\n    @Output() public sortChanged: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input()\r\n    public get config(): any {\r\n        return this.appSort;\r\n    }\r\n\r\n    public set config(value: any) {\r\n        this.appSort = value;\r\n    }\r\n\r\n    @HostListener('click', ['$event', '$target'])\r\n    public onToggleSort(event: any): void {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (this.appSort && this.column && this.column.sort !== false) {\r\n            switch (this.column.sort) {\r\n            case 'asc':\r\n                this.column.sort = 'desc';\r\n                break;\r\n            case 'desc':\r\n                this.column.sort = '';\r\n                break;\r\n            default:\r\n                this.column.sort = 'asc';\r\n                break;\r\n            }\r\n\r\n            this.sortChanged.emit(this.column);\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n\\r\\n<head>\\r\\n    <meta charset=\\\"utf-8\\\" />\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\r\\n    <meta name=\\\"description\\\" content=\\\"Essential JS 2 TypeScript Components\\\" />\\r\\n    <meta name=\\\"author\\\" content=\\\"Syncfusion\\\" />\\r\\n    <link href=\\\"//cdn.syncfusion.com/ej2/fabric.css\\\" rel=\\\"stylesheet\\\" />\\r\\n    <script type=\\\"text/javascript\\\">\\r\\n        if (/MSIE \\\\d|Trident.*rv:/.test(navigator.userAgent)) {\\r\\n            document.write('<script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/bluebird/3.5.1/bluebird.min.js\\\"><\\\\/script>');\\r\\n        }\\r\\n    </script>\\r\\n</head>\\r\\n\\r\\n<body>\\r\\n<style>\\r\\n    body {\\r\\n        margin: 0;\\r\\n    }\\r\\n</style>\\r\\n<div><h2>Chart depicting stock details of {{symbol}}</h2></div>\\r\\n<div class=\\\"control-section\\\">\\r\\n    <div id=\\\"container\\\"></div>\\r\\n</div>\\r\\n<div class='panel-footer'>\\r\\n    <a class='btn btn-default' (click)='onBack()' style='width:80px'>\\r\\n        <i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i> Back\\r\\n    </a>\\r\\n</div>\\r\\n</body>\\r\\n\\r\\n</html>\"","﻿import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { DataService } from \"../Shared/dataService\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { StockChart } from '@syncfusion/ej2-charts';\r\n//import { chartData } from './indicator-data';\r\nimport { DateTime, AreaSeries, CandleSeries, HiloOpenCloseSeries, HiloSeries, LineSeries, SplineSeries } from '@syncfusion/ej2-charts';\r\nimport { RangeTooltip, Tooltip, ColumnSeries, Crosshair } from '@syncfusion/ej2-charts';\r\nStockChart.Inject(DateTime, AreaSeries, CandleSeries, HiloOpenCloseSeries, HiloSeries, LineSeries, SplineSeries);\r\n\r\n\r\nStockChart.Inject(RangeTooltip, Tooltip, Crosshair, ColumnSeries);\r\n\r\n@Component({\r\n    selector: \"stock-detail\",\r\n    templateUrl: \"stockDetails.component.html\"\r\n})\r\nexport class StockDetailsComponent implements OnInit {\r\n    symbol: string;\r\n    chartData: any;\r\n    constructor(private data: DataService, private _route: ActivatedRoute, private _router: Router) {\r\n    }\r\n    ngOnInit(): void {\r\n        this._route.params.subscribe(params => {\r\n            this.symbol = params['symbol'];\r\n        });\r\n        this.data.getStockDetails(this.symbol)\r\n            .subscribe(result => {\r\n                this.chartData = result;\r\n                this.createChart();\r\n            });\r\n    }\r\n    createChart() {\r\n        let stockChart: StockChart = new StockChart({\r\n            chartArea: { border: { width: 0 } },\r\n            primaryXAxis: { valueType: 'DateTime', majorGridLines: { width: 0 }, crosshairTooltip: { enable: true } },\r\n            primaryYAxis: {\r\n                lineStyle: { color: 'transparent' },\r\n                majorTickLines: { color: 'transparent', width: 0 }\r\n            },\r\n            series: [\r\n                {\r\n                    dataSource: this.chartData,\r\n                    type: 'HiloOpenClose',\r\n                    bearFillColor: '#00226C',\r\n                    bullFillColor: \"#0450C2\",\r\n                    fill: 'blue'\r\n                },\r\n            ],\r\n            border: { width: 0 },\r\n            crosshair: { enable: true },\r\n            tooltip: { enable: true },\r\n            enablePeriodSelector: false,\r\n            height: '350',\r\n        });\r\n        stockChart.appendTo('#container');\r\n    }\r\n\r\n    onBack(): void {\r\n        this._router.navigate(['/index']);\r\n    }\r\n\r\n   \r\n}","module.exports = \"ul {\\r\\n    list-style-type: none;\\r\\n}\\r\\n\\r\\nli {\\r\\n    display: block;\\r\\n    line-height: 30px;\\r\\n}\\r\\n\\r\\n.description {\\r\\n    font-size: 16px;\\r\\n    padding-top: 10px;\\r\\n}\\r\\n\\r\\n.pagination {\\r\\n    display: inline-flex;\\r\\n}\\r\\n\"","module.exports = \"<div class='panel panel-primary'>\\r\\n    <div class='panel-heading'>\\r\\n\\r\\n    </div>\\r\\n    <div class='panel-body'>\\r\\n\\r\\n\\r\\n        <div class='table-responsive'>\\r\\n            <table class='table'>\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th *ngFor=\\\"let column of columns\\\" [appSort]=\\\"config\\\" [column]=\\\"column\\\" (sortChanged)=\\\"onChangeTable($event)\\\">\\r\\n                        {{column.title | titlecase}}\\r\\n                        <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-angle-down': column.sort === 'desc', 'fa-angle-up': column.sort === 'asc'}\\\"></i>\\r\\n                    </th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                <tr *ngFor='let stock of pagedItems'>\\r\\n                    <td>\\r\\n                        <a [routerLink]=\\\"['/detail',stock.symbol]\\\">{{ stock?.symbol }}</a>\\r\\n                    </td>\\r\\n                    <td>{{ stock?.date | date:'mediumDate'}}</td>\\r\\n                    <td>{{ stock?.open }}</td>\\r\\n                    <td>{{ stock?.close }}</td>\\r\\n                    <td>{{ stock?.low }}</td>\\r\\n                    <td>{{ stock?.high }}</td>\\r\\n                    <td>{{ stock?.volume | number:'7.0-0'}}</td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"text-center\\\">\\r\\n\\r\\n    <!-- pager -->\\r\\n    <ul *ngIf=\\\"pager.pages && pager.pages.length\\\" class=\\\"pagination\\\">\\r\\n        <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n            <a class=\\\"page-link\\\" (click)=\\\"setPage(1)\\\">First</a>\\r\\n        </li>\\r\\n        <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\r\\n            <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\r\\n        </li>\\r\\n        <li *ngFor=\\\"let page of pager.pages\\\" class=\\\"page-item\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\r\\n            <a class=\\\"page-link\\\" (click)=\\\"setPage(page)\\\">{{page}}</a>\\r\\n        </li>\\r\\n        <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n            <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\r\\n        </li>\\r\\n        <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\r\\n            <a class=\\\"page-link\\\" (click)=\\\"setPage(pager.totalPages)\\\">Last</a>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\"","﻿import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { DataService } from \"../Shared/dataService\";\r\nimport { PagerService } from '../Shared/pager.service';\nimport { SortDirective } from '../directives/sort.directive';\r\nimport { Stock } from \"../Shared/stock\";\r\n\r\n@Component({\n    selector: \"stock-list\",\n    templateUrl: \"stockList.component.html\",\n    styleUrls: [\"stockList.component.css\"]\n})\nexport class StockListComponent implements OnInit {\r\n    \r\n    constructor(private data: DataService, private _pagerService: PagerService) {\r\n    }\r\n\r\n    public stock: Stock[] = [];\r\n    // paged items\r\n    pagedItems: Stock[];\r\n    public columns: Array<any> = [];\r\n    // pager object\r\n    pager: any = {};\n    public config: any;\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadStock()\r\n            .subscribe(data => {\r\n                    if (data) {\r\n                        this.stock = data;\r\n                        this.setPage(1);\n                        this.initTable();\r\n                    }\r\n                }\r\n            );  \r\n    } \r\n\r\n    setPage(page: number, data: Stock[] = this.stock) {\r\n        // get pager object from service\r\n        this.pager = this._pagerService.getPager(data.length, page);\r\n\r\n        // get current page of items\r\n        this.pagedItems = data.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n    }\r\n\r\n    initTable() {\n        const objectKeys = Object.keys(this.stock[0]) as Array<keyof Stock>;\n        objectKeys.splice(0, 1);\n        objectKeys.forEach((item: string) => {\n            \n                this.columns.push({\n                    title: item, sort: ''\n                });\n        });\n        this.config = {\n            sorting: { columns: this.columns }\n        };\n    }\n\n    public get configColumns(): any {\n        let sortColumns: Array<any> = [];\n\n        this.columns.forEach((column: any) => {\n            if (column.sort) {\n                sortColumns.push(column);\n            }\n        });\n\n        return { columns: sortColumns };\n    }\n\n    public changeSort(data: any, config: any): any {\n        if (!config.sorting) {\n            return data;\n        }\n\n        let columns = this.config.sorting.columns || [];\n        let columnName: string = void 0;\n        let sort: string = void 0;\n\n        for (let i = 0; i < columns.length; i++) {\n            if (columns[i].sort !== '' && columns[i].sort !== false) {\n                columnName = columns[i].title;\n                sort = columns[i].sort;\n            }\n        }\n\n        if (!columnName) {\n            return data;\n        }\n\n        // simple sorting\n        return data.sort((previous: any, current: any) => {\n            if (previous[columnName] > current[columnName]) {\n                return sort === 'desc' ? -1 : 1;\n            } else if (previous[columnName] < current[columnName]) {\n                return sort === 'asc' ? -1 : 1;\n            }\n            return 0;\n        });\n    }\n\n    public onChangeTable(column: any): void {\n        this.columns.forEach((col: any) => {\n            if (col.title !== column.title) {\n                col.sort = '';\n            }\n        });\n        this.tableChanged({ sorting: this.configColumns });\n    }\n\n    public tableChanged(config: any) {\n        if (config.sorting) {\n            Object.assign(this.config.sorting, config.sorting);\n        }\n        // let data = this.moviesInfo.slice(0);\n        let sortedData = this.changeSort(this.stock, this.config);\n        this.setPage(1, sortedData);\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}